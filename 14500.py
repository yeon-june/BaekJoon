# 메모리: 127984kb
# 시간: 344ms
'''
A_tet = [((0,0), (0,1), (0,2), (0,3)),
         ((0,0), (1,0), (2,0),(3,0))]
B_tet = [((0,0), (1,0), (0,1), (1,1))]
C_tet = [((0,0), (1,0), (2,0), (2,1)),
         ((0,0), (1,0), (2,0), (2,-1)),
         ((0,0), (1,0), (2,0), (0,-1)),
         ((0,0), (1,0), (2,0), (0,1)),
         ((0,0), (0,1), (0,2), (1,0)),
         ((0,0), (0,1), (0,2), (-1,0)),
         ((0,0), (0,1), (0,2), (-1,2)),
         ((0,0), (0,1), (0,2), (1,2))]
D_tet = [((0,0), (1,0), (1,1), (2,1)),
         ((0,0), (0,1), (-1,1), (-1,2))]
E_tet = [((0,0), (0,1), (0,2), (1,1)),
         ((0,0), (0,1), (0,2), (-1,1)),
         ((0,0), (1,0), (2,0), (1,1)),
         ((0,0), (1,0), (2,0), (1,-1))]
'''

tets = [((0,0), (0,1), (0,2), (0,3)),
       ((0,0), (1,0), (2,0),(3,0)),
       ((0,0), (1,0), (0,1), (1,1)),
       ((0,0), (1,0), (2,0), (2,1)),
       ((0,0), (1,0), (2,0), (2,-1)),
       ((0,0), (1,0), (2,0), (0,-1)),
       ((0,0), (1,0), (2,0), (0,1)),
       ((0,0), (0,1), (0,2), (1,0)),
       ((0,0), (0,1), (0,2), (-1,0)),
       ((0,0), (0,1), (0,2), (-1,2)),
       ((0,0), (0,1), (0,2), (1,2)),
       ((0,0), (1,0), (1,1), (2,1)),
       ((0,0), (0,1), (-1,1), (-1,2)),
       ((0,0), (1,0), (1,-1), (2,-1)),
       ((0,0), (0,1), (1,1), (1,2)),
       ((0,0), (0,1), (0,2), (1,1)),
       ((0,0), (0,1), (0,2), (-1,1)),
       ((0,0), (1,0), (2,0), (1,1)),
       ((0,0), (1,0), (2,0), (1,-1))]

def apply_tet(i,j):
    mx_sum = 0
    for tet in tets:
        tet_sum = 0
        for k in range(4):
            ni = i +tet[k][0]
            nj = j +tet[k][1]
            if ni in range(N) and nj in range(M):
                tet_sum += arr[ni][nj]
            else: 
                break
        if tet_sum > mx_sum:
            mx_sum = tet_sum
    return mx_sum

N, M = map(int, input().split())
arr =[]
for n in range(N):
    arr.append(list(map(int, input().split())))

tot_mx = 0
for i in range(N):
    for j in range(M):
        trial = apply_tet(i,j)
        if trial > tot_mx:
            tot_mx = trial

print(tot_mx)